1 Tính chất đa hình là gì
+ Đa hình trong phương thức
	--> Là 2/n phương thức cùng tên
		+ khác SL tham số
		+ KDL truyền vào của tham số
		--> Overloading
		+ thuộc 2 class có quan hệ thừa kế,
		  phương thức trong lớp con định nghĩa lại phương thức từ lớp lớp cha
		 --> Overriding
	VD: Class X --> sum(a, b), sum(a, b, c)
		Class A#paint --> Class B#paint
		A extends B
		
		
+ Đa hình trong đối tượng 
	--> Là 1 đối tượng/biến có KDL lớp cha lúc compile
	có thể tham chiếu/trỏ đến KDL của các lớp con lúc runtime
	
	Câu hỏi: Vì sao không lấy class hiện tại new class hiện tại
			mà phải lấy class cha new class con?
		
	Trả lời: 
	1. Dễ dang ép kiểu/gán gia trị qua về giữa các biến có KDL thuộc nhóm(cha - con)
	Vì tất cả đều là KDL cha lúc compile
			
	2. Có thể gộp/gom tất cả các phần tử có KDL
	cha/con vào trong 1 mảng/danh sách có KDL của cha
			
	3. Thỏa mãn tính chất trong 
	design patterm --> factory pattern
	Cha Cha = new Con()
			
	Câu hỏi: KDL cha = KDL con ==> OK
	KDL con = KDL cha ==> FAIL
	
	Ví dụ:
	KNT: long l = ... -- int i = ...
		 l = i ==> OK
		 i = l ==> FAIL
	
	KDT: Shape sh = new Shape()H1 -- Square sq = new Square()H2
		 sh = sq ==> OK
		 sq(H1) = sh(H1) ==> FAIL AT COMPILE
		 sq.x
		 sq.y
		 
	Shape: x
	Square: x y
	
	
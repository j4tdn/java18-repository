	Item: id, name, salesPrice
	Size: id, gender. desc
	
	Mapping N-N to JPA/Hibernate
	
	Case_1:
	ItemDetail: itemId, sizeId
	--> JPA/Hibernate mappingL @ManyToMay @JoinTable 
	    Item: @JoinTable
	    ItemDetail: mappedBy
	
	Case_2: 
	ItemDetail: itemId, sizeId, #(amount, createdDate)
	--> create new Entity and mapping with directly ItemDetail
	--> @Embedeable
	--> @EmbededId
	
	--> DAILY USE --> Case_2
	
===================================================

SELECT --> Không yêu cầu đặt trong một Transaction

INSERT, UPDATE, DELETE
--> Yêu cầu: đặt trong một Transaction
	
	+ openSession: 
	  Nếu ko có Transaction --> code sẽ không được thực thi, commit
	                        --> ko báo lỗi
	                        
	+ getCurrentSession:
	  Nếu ko có Transaction --> báo lỗi
	  
===================================================
@Override
	public void save(ItemGroup itemGroup) {
		Session session = openSesstion();
		Transaction transaction = session.beginTransaction();
		try {
			session.saveOrUpdate(itemGroup);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		}

	}
	
@Override
	public void addNewItemGroups(int newItemGroup) {
		Session session = openSesstion();
		Transaction transaction = session.beginTransaction();
		try {
			openSesstion().createNativeQuery(STORED_PROCEDURE_ADD_NEW_ITEM_GROUPS)
			.setParameter("pAmount", newItemGroup)
			.executeUpdate();
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		}
	}

CÁCH CUSTOM HAI ĐOẠN CODE TRÙNG Ở TRÊN	
protected void executeWithTransaction(Consumer<Session> consumer) {
		Session session = openSesstion();
		Transaction transaction = session.beginTransaction();
		try {
			consumer.accept(session);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		}
	}
